/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import * as Ajv from 'ajv'
import {REntregas} from '../r-entregas.interface';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {REntregas};
export const REntregasSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "defaultProperties": [
  ],
  "properties": {
    "CTE_FPag": {
      "items": {
        "defaultProperties": [
        ],
        "properties": {
          "CTE": {
            "type": "number"
          },
          "F_PAGAMENTO": {
            "type": "number"
          }
        },
        "required": [
          "CTE",
          "F_PAGAMENTO"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "FUNCIONARIOS": {
      "items": {
        "defaultProperties": [
        ],
        "properties": {
          "FUNCAO": {
            "type": "number"
          },
          "FUNCIONARIO": {
            "type": "number"
          }
        },
        "required": [
          "FUNCAO",
          "FUNCIONARIO"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "OBS": {
      "type": "string"
    },
    "USUARIO": {
      "type": "number"
    },
    "VEICULO": {
      "type": "number"
    }
  },
  "required": [
    "CTE_FPag",
    "FUNCIONARIOS",
    "OBS",
    "USUARIO",
    "VEICULO"
  ],
  "type": "object"
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
export const isREntregas = ajv.compile(REntregasSchema) as ValidateFunction<REntregas>;
export default function validate(value: unknown): REntregas {
  if (isREntregas(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(isREntregas.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'REntregas'}) +
      '\n\n' +
      inspect(value),
    );
  }
}
